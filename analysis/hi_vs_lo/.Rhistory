geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5)
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(0.35))
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
olcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(0.5))
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(1))
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(1), point.padding = unit(1))
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(1), point.padding = unit(10))
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(1.5), point.padding = unit(1))
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(0.35, 'lines'), point.padding = unit(0.3, 'lines'))
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(0.5, 'lines'), point.padding = unit(0.3, 'lines'))
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(0.9, 'lines'), point.padding = unit(0.3, 'lines'))
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_text_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(0.9, 'lines'), point.padding = unit(0.3, 'lines'))
#geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
#geom_hline(yintercept = -log10(0.05), linetype = 'dashed')
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
?ggrepel
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_label_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(0.9, 'lines'), point.padding = unit(0.3, 'lines'))
#geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
#geom_hline(yintercept = -log10(0.05), linetype = 'dashed')
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
ggsave("/Users/mpeacey/TE_thymus/analysis/hi_vs_lo/Plots/lo_vs_hi_TEs_volcano_plot.png",
width = 20, height = 15, units = "cm")
?ggrepel
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_label_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5, box.padding = unit(0.9, 'lines'), point.padding = unit(0.2, 'lines'))
#geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
#geom_hline(yintercept = -log10(0.05), linetype = 'dashed')
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_label_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 15)
#geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
#geom_hline(yintercept = -log10(0.05), linetype = 'dashed')
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_label_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 25)
#geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
#geom_hline(yintercept = -log10(0.05), linetype = 'dashed')
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
d
d
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_label_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 25)
#geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
#geom_hline(yintercept = -log10(0.05), linetype = 'dashed')
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_label_repel(
data = subset(df, significant == TRUE),
aes(label = rownames(subset(df, significant == TRUE))),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 20)
#geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
#geom_hline(yintercept = -log10(0.05), linetype = 'dashed')
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
ggsave("/Users/mpeacey/TE_thymus/analysis/hi_vs_lo/Plots/lo_vs_hi_TEs_volcano_plot.png",
width = 20, height = 15, units = "cm")
head(df)
library(dplyr)
library(readr)
library(tidyr)
library(DESeq2)
## Import count matrix
data = read.table("hi_vs_lo.cntTable",header=T,row.names=1)
## Subset into TE count matrix 'TE_data'
TE_data = data[grepl("^(?!ENSG).*$",rownames(data), perl = TRUE),]
## Filter count matrix to exclude non-expressed genes
min_read = 1
TE_data <- TE_data[apply(TE_data,1,function(x){max(x)}) > min_read,]
## Define sampleInfo
ID = colnames(TE_data)
sampleInfo = data.frame(ID,row.names=colnames(TE_data))
sampleInfo = suppressWarnings(separate(sampleInfo, col = ID, into = c('patient', 'group'), sep = '_'))
## Construct DESeq dataset object
dds <- DESeqDataSetFromMatrix(countData = TE_data, colData = sampleInfo, design = ~patient + group)
dds$group = relevel(dds$group,ref="lo")
## Run differential expression analysis
dds <- DESeq(dds)
res <- results(dds,independentFiltering=F)
## Transform raw count data
vs_dds <- vst(dds, blind=FALSE)
## Add GTF annotation information to results table
df = as.data.frame(res)
df = cbind(ID = rownames(df), df)
head(df)
df = separate(data = df, col = ID, sep = c('gene', 'family', 'class'), sep = ':')
df = separate(data = df, col = 'ID', sep = c('gene', 'family', 'class'), sep = ':')
df
head(df)
df2 = separate(data = df, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
head(df2)
df = separate(data = df, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
df = mutate(df, significant = case_when((padj < 0.05) & (abs(log2FoldChange) > 1) ~ TRUE,
(padj >= 0.05) | (abs(log2FoldChange) <= 1) ~ FALSE))
volcano_plot = ggplot(data = df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC (HI/LO)')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-lo vs mTEC-hi', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_label_repel(
data = subset(df, significant == TRUE),
aes(label = subset(df, significant == TRUE)$class),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 20)
#geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
#geom_hline(yintercept = -log10(0.05), linetype = 'dashed')
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
ggsave("/Users/mpeacey/TE_thymus/analysis/hi_vs_lo/Plots/lo_vs_hi_TEs_volcano_plot.png",
width = 20, height = 15, units = "cm")
normalized_counts = as.data.frame(assay(vst))
normalized_counts = as.data.frame(assay(vs_dds))
normalized_counts
head(normalized_counts)
normalized_counts = cbind(ID = rownames(normalized_counts), normalized_counts)
df = separate(data = normalized_counts, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
df = as.data.frame(res)
df = cbind(ID = rownames(df), df)
df = separate(data = df, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
df = mutate(df, significant = case_when((padj < 0.05) & (abs(log2FoldChange) > 1) ~ TRUE,
(padj >= 0.05) | (abs(log2FoldChange) <= 1) ~ FALSE))
##
normalized_counts = as.data.frame(assay(vs_dds))
normalized_counts = cbind(ID = rownames(normalized_counts), normalized_counts)
normalized_counts = separate(data = normalized_counts, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
head(normalized_counts)
sigGenes <- rownames(dfF[df$significant == TRUE])
sigGenes <- rownames(df[df$significant == TRUE])
df[df$significant == TRUE]
sigGenes <- rownames(df[df$significant == TRUE,])
sigGenes
sig_normalized_counts <- normalized_counts[rownames(normalized_counts) %in% sigGenes,]
sig_normalized_counts
library(reshape2)
install.packages('reshape2')
library(reshape2)
sig_normalized_counts_long <- melt(sig_normalized_counts, id.vars=c("gene"))
sig_normalized_counts_long
normalized_counts = as.data.frame(assay(vs_dds))
normalized_counts = cbind(ID = rownames(normalized_counts), normalized_counts)
#normalized_counts = separate(data = normalized_counts, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
sigGenes = rownames(df[df$significant == TRUE,])
sig_normalized_counts <- normalized_counts[rownames(normalized_counts) %in% sigGenes,]
sig_normalized_counts_long <- melt(sig_normalized_counts, id.vars=c("ID"))
sig_normalized_counts_long
ggplot(sig_normalized_counts, aes(x = variable, y = ID, fill = value)) +
geom_raster()
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster()
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1)
d
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1))
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1)) +
scale_fill_viridis(trans="sqrt")
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1)) +
scale_fill_brewer(palette="Set1")
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1)) +
scale_fill_brewer(
type = "qual",
aesthetics = "fill")
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1)) +
scale_fill_brewer(palette = 'Blues'
type = "qual",
aesthetics = "fill")
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1)) +
scale_fill_brewer(palette = 'Blues',
type = "qual",
aesthetics = "fill")
install.packages("viridis")
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1)) +
scale_fill_viridis()
library(viridis)
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1)) +
scale_fill_viridis()
ggplot(sig_normalized_counts_long, aes(x = variable, y = ID, fill = value)) +
geom_raster() + theme(axis.text.x=element_text(angle=65, hjust=1)) +
scale_fill_viridis(trans = 'sqrt')
