ggtitle('mTEC-hi vs mTEC-lo', 'TE expression')
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA')
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
guides(colour = FALSE)
vs_dds
assay(vs_dds)
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
guides(colour = FALSE) +
geom_label_repel(
data = vs_dds,
aes(label = 'a'),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 20)
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
assay(vs_dds)
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_label()
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
assay(vs_dds)
colnames(vs_dds)
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_label(aes(label = colnames(vs_dds)))
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_text(aes(label = colnames(vs_dds)))
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_label_repel(
data = vs_dds,
aes(label = colnames(vs_dds)),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 20)
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_label_repel(
data = assay(vs_dds),
aes(label = colnames(vs_dds)),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 20)
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_label_repel(
data = as.data.frame(assay(vs_dds)),
aes(label = colnames(vs_dds)),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 20)
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_text(aes(label = colnames(vs_dds)))
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_text(aes(label = colnames(vs_dds)), check_overlap = TRUE)
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_text(aes(label = colnames(vs_dds)), nudge_x = 1)
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_text(aes(label = colnames(vs_dds)), nudge_x = 0.5)
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
PCA = plotPCA(vs_dds, intgroup = 'group') +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression PCA') +
geom_text(aes(label = colnames(vs_dds)), nudge_x = 0.5, nudge_y = 0.2)
PCA + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
ggsave("/Users/mpeacey/TE_thymus/analysis/hi_vs_lo/Plots/hi_vs_lo_TEs_PCA.png",
width = 20, height = 15, units = "cm")
my_heatmap = pheatmap(sig_normalized_counts,
cluster_rows=TRUE,
show_rownames=TRUE,
cluster_cols=TRUE,
cutree_cols = 2)
save_pheatmap_png <- function(x, filename, width=1200, height=1000, res = 150) {
png(filename, width = width, height = height, res = res)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
save_pheatmap_png(my_heatmap, "/Users/mpeacey/TE_thymus/analysis/hi_vs_lo/Plots/hi_vs_lo_TEs_heatmap.png")
test <- data.frame(
group=LETTERS[1:5],
value=c(13,7,9,21,2)
)
ggplot(, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1)
test
ggplot(test, aes(x="", y=value, fill=group)) + geom_bar(stat="identity", width=1)
head(vs_dds)
head(sig_normalized_counts)
test
results_df
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
class(sig_normalized_counts)
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI
test
rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI
sig_normalized_counts_HI = select(sig_normalized_counts, mean)
sig_normalized_counts_HI = select(sig_normalized_counts, 'mean')
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts, mean)
sig_normalized_counts_HI
View(sig_normalized_counts_HI)
View(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts, c('mean'))
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
sig_normalized_counts_HI
View(sig_results_df)
View(sig_results_df)
merge(sig_normalized_counts_HI, sig_results_df)
sig_normalized_counts_HI = merge(sig_normalized_counts_HI, sig_results_df)
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
head(sig_normalized_counts_HI)
sig_results_df
sig_normalized_counts_HI = merge(sig_normalized_counts_HI,
sig_results_df,
by = rownames(sig_results_df))
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = separate(data = sig_normalized_counts_HI, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
sig_normalized_counts_HI = merge(sig_normalized_counts_HI,
sig_results_df,
by = gene)
sig_normalized_counts_HI = merge(sig_normalized_counts_HI,
sig_results_df,
by = sig_normalized_counts$gene)
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = separate(data = sig_normalized_counts_HI, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
View(results_df)
View(results_df)
library(dplyr)
library(readr)
library(tidyr)
library(DESeq2)
library(reshape2)
library(ggplot2)
library(svglite)
library(ggpubr)
library(ggrepel)
library(viridis)
library(pheatmap)
## Set paramets
p_value_cutoff = 0.05
log_fold_change_cutoff = 1
#################################################################
# Differential expression with DESeq2
#################################################################
## Import count matrix
data = read.table("hi_vs_lo.cntTable",header=T,row.names=1)
colnames(data) = c('214_HI', '221_HI', '226_HI', '214_LO', '221_LO', '226_LO')
## Subset into TE count matrix 'TE_data'
TE_data = data[grepl("^(?!ENSG).*$",rownames(data), perl = TRUE),]
## Filter count matrix to exclude non-expressed genes
min_read = 1
TE_data <- TE_data[apply(TE_data,1,function(x){max(x)}) > min_read,]
## Define sampleInfo
ID = colnames(TE_data)
sampleInfo = data.frame(ID,row.names=colnames(TE_data))
sampleInfo = suppressWarnings(separate(sampleInfo, col = ID, into = c('patient', 'group'), sep = '_'))
## Construct DESeq dataset object
dds <- DESeqDataSetFromMatrix(countData = TE_data, colData = sampleInfo, design = ~patient + group)
dds$group = relevel(dds$group,ref="LO")
## Run differential expression analysis
dds <- DESeq(dds)
res <- results(dds,independentFiltering=F)
## Convert results to dataframe and add signficance label
results_df = as.data.frame(res)
results_df = cbind(ID = rownames(results_df), results_df)
results_df = separate(data = results_df, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
results_df = cbind(ID = rownames(results_df), results_df)
results_df = mutate(results_df, significant = case_when((padj < p_value_cutoff) & (abs(log2FoldChange) > log_fold_change_cutoff) ~ TRUE,
(padj >= p_value_cutoff) | (abs(log2FoldChange) <= log_fold_change_cutoff) ~ FALSE))
results_df = mutate(results_df, abs_log2FoldChange = abs(log2FoldChange))
sig_results_df = results_df[results_df$significant == TRUE,]
## Transform raw count data and convert to dataframe
vs_dds <- vst(dds, blind=FALSE)
normalized_counts = as.data.frame(assay(vs_dds))
sigGenes = rownames(results_df[results_df$significant == TRUE,])
sig_normalized_counts = assay(vs_dds)[rownames(normalized_counts) %in% sigGenes,]
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = separate(data = sig_normalized_counts_HI, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = merge(sig_normalized_counts_HI,
sig_results_df,
by = sig_normalized_counts$ID)
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = separate(data = sig_normalized_counts_HI, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
View(sig_normalized_counts)
View(sig_normalized_counts)
View(sig_normalized_counts_HI)
View(sig_normalized_counts_HI)
sig_normalized_counts_HI = merge(sig_normalized_counts_HI,
sig_results_df)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, c('gene', 'family', 'class', 'mean'))
test
test <- data.frame(group=LETTERS[1:5], value=c(13,7,9,21,2))
test
ggplot(sig_normalized_counts_HI, aes(x="", y=mean, fill=class)) + geom_bar(stat="identity", width=1)
ggplot(sig_normalized_counts_HI, aes(x="", y=mean, fill=class)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(sig_normalized_counts_HI, aes(x="", y=mean, fill=class)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) + theme_void()
ggplot(sig_normalized_counts_HI, aes(x="", y=mean, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
sig_normalized_counts_HI
group_by(sig_normalized_counts_HI, class) %>% summarize(mean = mean(class))
group_by(sig_normalized_counts_HI, class) %>% summarize(mean = mean(mean))
group_by(sig_normalized_counts_HI, class) %>% summarize(sum = sum(mean))
ggplot(test, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
test = group_by(sig_normalized_counts_HI, class) %>% summarize(sum = sum(mean))
test = as.data.frame(test)
ggplot(test, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
>vst
?vst
counts(dds, normalized=TRUE)
mfrow(1, 2)
par(mfrow, 1, 2)
par(mfrow = c(1, 2))
ggplot(test, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
par(mfrow = c(1, 2))
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = separate(data = sig_normalized_counts_HI, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = merge(sig_normalized_counts_HI,
sig_results_df)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, c('gene', 'family', 'class', 'mean'))
test = group_by(sig_normalized_counts_HI, class) %>% summarize(sum = sum(mean))
test = as.data.frame(test)
ggplot(test, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
install.packages('gridExta')
install.packages('gridExtra')
install.packages('gridExtra')
install.packages("gridExtra")
View(TE_data)
library(gridExtra)
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = separate(data = sig_normalized_counts_HI, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = merge(sig_normalized_counts_HI,
sig_results_df)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, c('gene', 'family', 'class', 'mean'))
test = group_by(sig_normalized_counts_HI, class) %>% summarize(sum = sum(mean))
test = as.data.frame(test)
plot1 = ggplot(test, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
grid.arrange(plot1, plot1, nrows = 1)
plot1
plot1 = ggplot(test, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
library(dplyr)
library(readr)
library(tidyr)
library(DESeq2)
library(reshape2)
library(ggplot2)
library(svglite)
library(ggpubr)
library(ggrepel)
library(gridExtra)
library(pheatmap)
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = separate(data = sig_normalized_counts_HI, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = merge(sig_normalized_counts_HI,
sig_results_df)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, c('gene', 'family', 'class', 'mean'))
test = group_by(sig_normalized_counts_HI, class) %>% summarize(sum = sum(mean))
test = as.data.frame(test)
plot1 = ggplot(test, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
grid.arrange(plot1, plot1, nrows = 1)
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
olcano_plot = ggplot(data = results_df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_label_repel(
data = subset(results_df, significant == TRUE),
aes(label = subset(results_df, significant == TRUE)$gene),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 20)
volcano_plot = ggplot(data = results_df, aes(x = log2FoldChange, y = -log10(padj), colour = significant)) +
geom_point(alpha = 0.6, aes(colour = significant)) +
xlab(expression('Log'[2]*' FC')) +
ylab(expression('-Log'[10]*' P value')) +
xlim(-3, 3) +
ggtitle('mTEC-hi vs mTEC-lo', 'TE expression') +
scale_colour_manual(values = c('#9B9A99', "red")) +
guides(colour = FALSE) +
geom_label_repel(
data = subset(results_df, significant == TRUE),
aes(label = subset(results_df, significant == TRUE)$gene),
size = 3.5,
box.padding = unit(0.9, 'lines'),
point.padding = unit(0.2, 'lines'),
max.overlaps = 20)
#geom_vline(xintercept = c(1, -1), linetype = 'dashed') +
#geom_hline(yintercept = -log10(0.05), linetype = 'dashed')
volcano_plot + theme_bw() + theme(plot.title = element_text(face = 'bold', size = 20),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
axis.line = element_line(size = 0.8),
panel.border = element_blank())
grid.arrange(plot1, volcano_plot, nrows = 1)
ggplot(test, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
sig_normalized_counts_HI_class = group_by(sig_normalized_counts_HI, class) %>% summarize(sum = sum(mean))
sig_normalized_counts_HI_class = as.data.frame(sig_normalized_counts_HI_class)
ggplot(sig_normalized_counts_HI_class, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
View(normalized_counts)
View(normalized_counts)
normalized_counts = as.data.frame(normalized_counts)
normalized_counts = as.data.frame(normalized_counts)
normalized_counts_HI = select(normalized_counts, c('214_HI', '221_HI', '226_HI'))
head(normalized_counts)
normalized_counts = as.data.frame(normalized_counts)
normalized_counts_HI = select(normalized_counts, c('214_HI', '221_HI', '226_HI'))
normalized_counts_HI$mean = rowMeans(normalized_counts_HI)
normalized_counts_HI = select(normalized_counts_HI, mean)
normalized_counts_HI = cbind(ID = rownames(normalized_counts_HI), normalized_counts_HI)
normalized_counts_HI = separate(data = normalized_counts_HI, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
normalized_counts_HI = cbind(ID = rownames(normalized_counts_HI), normalized_counts_HI)
head(normalized_counts_HI)
View(results_df)
View(results_df)
View(normalized_counts_HI)
View(normalized_counts_HI)
normalized_counts_HI = merge(normalized_counts_HI, results_df)
normalized_counts_HI = select(normalized_counts_HI, c('gene', 'family', 'class', 'mean'))
normalized_counts_HI_class = group_by(normalized_counts_HI, class) %>% summarize(sum = sum(mean))
normalized_counts_HI_class = as.data.frame(normalized_counts_HI_class)
ggplot(normalized_counts_HI_class, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
sig_normalized_counts = as.data.frame(sig_normalized_counts)
sig_normalized_counts_HI = select(sig_normalized_counts, c('214_HI', '221_HI', '226_HI'))
sig_normalized_counts_HI$mean = rowMeans(sig_normalized_counts_HI)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, mean)
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = separate(data = sig_normalized_counts_HI, col = 'ID', into = c('gene', 'family', 'class'), sep = ':')
sig_normalized_counts_HI = cbind(ID = rownames(sig_normalized_counts_HI), sig_normalized_counts_HI)
sig_normalized_counts_HI = merge(sig_normalized_counts_HI,
sig_results_df)
sig_normalized_counts_HI = select(sig_normalized_counts_HI, c('gene', 'family', 'class', 'mean'))
sig_normalized_counts_HI_class = group_by(sig_normalized_counts_HI, class) %>% summarize(sum = sum(mean))
sig_normalized_counts_HI_class = as.data.frame(sig_normalized_counts_HI_class)
ggplot(sig_normalized_counts_HI_class, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white') +
coord_polar("y", start=0) + theme_void()
ggplot(sig_normalized_counts_HI_class, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1, color = 'white')
ggplot(sig_normalized_counts_HI_class, aes(x="", y=sum, fill=class)) +
geom_bar(stat="identity", width=1)
